@import "@fontsource-variable/inter";
@import "@fontsource-variable/atkinson-hyperlegible-mono";
@import "./palettes.css";

* {
  box-sizing: border-box;
}
:root {
  font-family: "Inter Variable", system-ui, sans-serif;
  --font-header: "Atkinson Hyperlegible Mono Variable", system-ui, sans-serif;
  --page-width: 40rem;
  --focus-size: 2px;
  --focus-size-current: 0;
  --colour-bg: var(--md-sys-color-surface-dim);
  --colour-sink: var(--md-sys-color-surface-container-lowest);
  --colour-surface: var(--md-sys-color-surface-container-high);
  --colour-surface-border: light-dark(
    var(--md-sys-color-outline),
    var(--md-sys-color-outline-variant)
  );
  --colour-focus: var(--md-sys-color-primary);
  --colour-button: light-dark(
    var(--md-sys-color-tertiary),
    var(--md-sys-color-on-tertiary)
  );
  --colour-button-border: light-dark(
    var(--md-sys-color-on-tertiary-fixed),
    var(--md-sys-color-tertiary-container)
  );
  --colour-fg: var(--md-sys-color-on-background);
  --colour-link: light-dark(
    color-mix(
      in oklch,
      var(--md-sys-color-primary) 80%,
      var(--md-sys-color-primary-fixed)
    ),
    var(--md-sys-color-primary-fixed)
  );
  --colour-page-loader: var(--md-sys-color-primary);
  line-height: 1.5;
}
pre,
code {
  font-family: monospace, monospace;
}
body {
  margin: 0;
}
body,
html,
#app {
  width: 100%;
  min-height: 100dvh;
  background-color: var(--colour-bg);
  color: var(--colour-fg);
}
h1,
h2,
h3 {
  font-family: var(--font-header);
  font-weight: 500;
}
.logo {
  fill: currentColor;
}
input {
  font: inherit;
  border: 1px solid var(--md-sys-color-outline);
  background: var(--colour-sink);
  color: var(--colour-fg);
  border-radius: 4px;
  padding: 0.25em 0.5em;
}
a:not(.menu-item) {
  color: var(--colour-link);
}
:is(button:not(.menu-item), .button) {
  --_btn-border-color: var(--colour-button-border);
  font: inherit;
  border: 1px solid var(--_btn-border-color);
  background: var(--colour-button);
  color: #fff;
  border-radius: 4px;
  padding: calc(0.25em - 1px) 0.5em;
  box-shadow:
    0 var(--focus-size) var(--_btn-border-color),
    0 0 0 var(--focus-size-current) var(--colour-focus),
    0 var(--focus-size) 0 var(--focus-size-current) var(--colour-focus);
  transform: translateY(-1px);
  cursor: pointer;
  padding-top: 2px;
  padding-bottom: 4px;
  &:is(:active, [data-headlessui-state~="active"]) {
    transform: translateY(1px);
    box-shadow:
      0 0 var(--_btn-border-color),
      0 0 0 var(--focus-size-current) var(--colour-focus);
  }
  .lucide {
    width: 1em;
    height: 1em;
    vertical-align: bottom;
    transform: translateY(-0.2em);
  }
  .lucide-wrap,
  .lucide:not(.lucide-wrap .lucide) {
    display: inline-block;
  }
}
main {
  width: var(--page-width);
  max-width: 100%;
  margin: 0 auto;
  padding: 1rem;
}

.search-form {
  display: flex;
  flex-grow: 1;
  align-items: center;
  grid-gap: 0.5ch;
  width: 0;
  margin-right: 1ch;
  input[type="search"] {
    flex-grow: 1;
    width: 0;
  }
}

.page:not(.page-home) {
  min-height: 100svh;
  display: flex;
  flex-direction: column;
  header {
    border-bottom: 1px solid var(--colour-surface-border);
    background: var(--colour-surface);
    .header-inner {
      display: flex;
      align-items: center;
      padding: 1rem;
      align-items: center;
      margin: 0 auto;
      max-width: var(--page-width);
    }
    h1 {
      font-size: 2rem;
      font-weight: 400;
      margin: 0;
      margin-right: 1rem;

      a {
        color: inherit;
        text-decoration: none;
      }

      .logo {
        width: 1.5em;
        height: 1.5em;
        vertical-align: middle;
        margin-right: 0.5ch;
      }
    }
  }
  h2 {
    font-family: var(--font-header);
    font-size: 1.5rem;
    font-weight: 500;
    margin: 0;
  }
}
.page.page-loading-splash {
  position: fixed;
  inset: 0;
  background: var(--colour-bg);
  z-index: 100;

  &:not(.ssr) {
    user-select: none;
    > * {
      pointer-events: none;
    }
  }
  main {
    display: flex;
    flex-grow: 1;
    align-items: center;
    justify-content: center;
    flex-direction: column;
    text-align: center;
    .logo {
      width: 8rem;
      opacity: 0.5;
    }
    h2 {
      font-weight: 400;
      padding-block: 1.5rem;
      max-width: 25rem;
    }
  }
}
.page-loading {
  position: fixed;
  z-index: 101;
  top: 0;
  left: 0;
  right: 0;
  height: 3px;
  opacity: 1;
  transform-origin: top;
  transform: scaleY(1);
  opacity: 1;
  transition: 1.5s transform ease-out, 0.3s 0.25s opacity ease-out;
  &.loaded {
    transform: scaleY(0);
    opacity: 0;
    &:after {
      content: "";
      position: absolute;
      inset: 0;
      background: var(--colour-page-loader);
      transform: translateX(0%);
      animation: page-loading-gaslighting 0.4s ease-out;
    }
  }
  .page-loading-gaslighting {
    width: 100%;
    height: 100%;
    background: var(--colour-page-loader);
    transform: translateX(-100%);
    animation: page-loading-gaslighting 60s cubic-bezier(0, 1, 0.22, 1);
  }
}
@keyframes page-loading-gaslighting {
  from {
    transform: translateX(-100%);
  }
  to {
    transform: translateX(0%);
  }
}
.spin {
  animation: spin 1s linear infinite;
}
@keyframes spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}
.popover {
  padding: 0.25rem;
  & > * {
    padding: 0.25rem;
    border: 1px solid var(--colour-surface-border);
    border-radius: 0.5rem;
    background: var(--colour-surface);
  }
}
.handle-input {
  width: 18rem;
  form {
    position: relative;
    display: flex;
    gap: 0.25rem;

    & > .lucide {
      position: absolute;
      width: 1em;
      height: 1em;
      font-size: 1.125rem;
      margin: 0.35rem;
      pointer-events: none;
    }
    input {
      padding-left: 1.5rem;
      width: 0;
      flex-grow: 1;
    }
  }
}
.menu {
  background: var(--colour-surface);
  border: 1px solid var(--colour-surface-border);
  border-radius: 0.25rem;
  --anchor-padding: 0.25rem;
  margin-top: 0.25rem;
  outline: none;
  min-width: 10rem;
}
.menu-item {
  display: block;
  padding: 0.25rem 0.5rem;
  color: var(--colour-fg);
  text-decoration: none;
  font: inherit;
  border: none;
  background: transparent;
  width: 100%;
  text-align: inherit;
  &:is(button) {
    cursor: pointer;
  }
  &:not(:last-child) {
    border-bottom: 1px solid var(--colour-surface-border);
  }
  &:is([data-focus], [data-active]) {
    background-color: var(--colour-fg);
    color: var(--colour-bg);
  }
}
.menu-item-account-caption {
  font-size: 0.75em;
  opacity: 0.75;
}
.menu-item-account-handle {
  margin-bottom: 0.1rem;
}

.menu-item-destructive {
  color: var(--md-sys-color-error);
  &:is([data-focus], [data-active]) {
    color: var(--md-sys-color-on-error-container);
    background: var(--md-sys-color-error-container);
  }
}

html:not([data-headlessui-focus-visible])
  :focus:not([contentEditable="true"], input, textarea) {
  --focus-size-current: 0;
}

[contentEditable="true"],
[tabindex],
a[href],
area[href],
button,
iframe,
input,
select,
details > summary,
textarea {
  box-shadow: 0 0 0 var(--focus-size-current) var(--colour-focus);
  outline: none;
}

:focus {
  --focus-size-current: var(--focus-size);

  & > * {
    --focus-size-current: 0;
  }
}

.error {
  color: var(--md-sys-color-error);
  padding: 0.8em 1em;
  border-radius: 0.8em;
  background: var(--md-sys-color-on-error);
  margin-bottom: 1.5rem;
}

.form-row {
  display: flex;
  align-items: baseline;
  gap: 1ch;
}

.install-command {
  user-select: all;
}

.button-loading {
  -webkit-text-fill-color: transparent !important;
  & > * {
    visibility: hidden;
  }
  &::before {
    content: "";
    width: 1em;
    height: 1em;
    position: absolute;
    display: block;
    top: calc(50% - 0.5em);
    left: calc(50% - 0.5em);
    border: 1px solid currentColor;
    box-sizing: border-box;
    border-radius: 50%;
    border-top-color: transparent;
    animation: 1s spin infinite linear;
  }
}
